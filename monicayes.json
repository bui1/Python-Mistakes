[
  {
    "Changes:": [
      "-        wineserver = self.get_executable + 'server'\n", 
      "+        wineserver = self.get_executable() + 'server'\n"
    ], 
    "Message:": "Fix wineserver call", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/lutris/lutris/commit/9f8195858bfb6104b47f05c0770b9b0650ac353b", 
    "Commit Corrections:": "https://github.com/lutris/lutris/commit/5c61e571d306edf780c538547abf7c5deec20cea"
  }, 
  {
    "Changes:": [
      "-    if ',' in data_principle:\n", 
      "+    if not ',' in data_principle:\n"
    ], 
    "Message:": "[bug fix] update configure V8.2", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/SureDoo/3_general_Deming/commit/3527a23ec188a01d07b7ba028f976cd4cc2baae1", 
    "Commit Corrections:": "https://github.com/SureDoo/3_general_Deming/commit/1524fc3f28ec4349c9dba368e905ba4a94cb568e"
  }, 
  {
    "Changes:": [
      "-        if 'picture' in data and 'url' in data['picture']:\n", 
      "+        if ('picture' in data) and (data['picture'] is not None) and ('url' in data['picture']):\n"
    ], 
    "Message:": "fixes for picture", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/pankajlal/prabandh/commit/7343590cf58ddb50ae50f5d51662dd6bc1427b3d", 
    "Commit Corrections:": "https://github.com/pankajlal/prabandh/commit/37b4ebfb127e6fe1a0c0ad92d059262619f263ed"
  }, 
  {
    "Changes:": [
      "-            serve(app, executor=executor)\n", 
      "+            serve(app, executor=executor, port=port)"
    ], 
    "Message:": "Forward port cli argument", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/FAForever/api/commit/c98291114ab18176ae08dc66628ed7a897c21259", 
    "Commit Corrections:": "https://github.com/FAForever/api/commit/444e68bb4cfc12ea96c094558f53df698765007d"
  }, 
  {
    "Changes:": [
      "-        \t\tc.openPort()\n", 
      "+        \t\tself.ci.openPort()\n", 
      "-        \t\tc.setFilterPos(False)\n", 
      "+        \t\tself.ci.setFilterPos(False)\n", 
      "-        \t\tc.closePort()\n", 
      "+        \t\tself.ci.closePort()\n", 
      "-        \t\tc.openPort()\n", 
      "+        \t\tself.ci.openPort()\n", 
      "-        \t\tc.setFilterPos(False)\n", 
      "+        \t\tself.ci.setFilterPos(False)\n", 
      "-        \t\tc.closePort()\n", 
      "+        \t\tself.ci.closePort()\n"
    ], 
    "Message:": "Fixed typos", 
    "Additions:": 6, 
    "Deletions:": 6, 
    "Commit Mistakes:": "https://github.com/UWMRO/CloudCamera/commit/10fa7373542fb297e3b739b10bec5a829083079a", 
    "Commit Corrections:": "https://github.com/UWMRO/CloudCamera/commit/f2170a93023669d0456e69637539a99c0e552ad0"
  }, 
  {
    "Changes:": [
      "+                        print(\"Job group set to \" + str(jobGroup))\n", 
      "+                        print(\"No job group specified\")\n", 
      "+                print(\"Job group = \" + str(jobGroup))\n", 
      "-                if self.getJob(self.jobGroup) == ResultCode.success:\n", 
      "+                if self.getJob(jobGroup) == ResultCode.success:\n"
    ], 
    "Message:": "Fixed another typo", 
    "Additions:": 4, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/russellthackston/comp-chem-util/commit/e625875d5d1b4e698796eb54b99c1089f691d715", 
    "Commit Corrections:": "https://github.com/russellthackston/comp-chem-util/commit/7e147e7edf64047f07e37daf4e529848a5d0775d"
  }, 
  {
    "Changes:": [
      "-            x = np.hstack([ll_classifier_train_X[:,:,:1], ll_classifier_train_X[:,:,2:]] )\n", 
      "+            x = np.dstack([ll_classifier_train_X[:,:,:1], ll_classifier_train_X[:,:,2:]] )\n"
    ], 
    "Message:": "\tmodified:   ../data_manager.py\n\tmodified:   ../params.py", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/gt-ros-pkg/hrl-assistive/commit/1a6be657bfdd75778f4b6dfd2d35c7e70c7ba6b2", 
    "Commit Corrections:": "https://github.com/gt-ros-pkg/hrl-assistive/commit/8269fad5580fdddb5e4c918d70c0d6707f92a7af"
  }, 
  {
    "Changes:": [
      "-            'id': self.id,\n", 
      "+            'id': self.id\n"
    ], 
    "Message:": "BUG: FLASK Restful API to server JSON not rendering", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/moagm316/FSND_Item_Catalog/commit/cef79e675b68ecbae421c13f25ee052612512b3d", 
    "Commit Corrections:": "https://github.com/moagm316/FSND_Item_Catalog/commit/947ccda23ee5bedf761a3014286bdd1d87730c6f"
  }, 
  {
    "Changes:": [
      "-                    if '5' in s_zone : or '6' in s_zone\n", 
      "+                    if '5' in s_zone  or '6' in s_zone :\n"
    ], 
    "Message:": "modidy", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/luyg24/practise/commit/0440d55b3717c521c8dbbb3564ef4257ee1a99d2", 
    "Commit Corrections:": "https://github.com/luyg24/practise/commit/ec67d4a5e3a52b17ec22c2d81b52d8192b31330b"
  }, 
  {
    "Changes:": [
      "-import enviroment\n", 
      "+import environment\n"
    ], 
    "Message:": "whoops missed one", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/drocta/someParser/commit/f52e05cb9ac788b1ecd2d55c3f2dc55fda43ae0a", 
    "Commit Corrections:": "https://github.com/drocta/someParser/commit/203cff66f30f3303c159ba38d33a950fe9c6c63d"
  }, 
  {
    "Changes:": [
      "-        self.daemon = True;\n", 
      "+        self.daemon = True\n"
    ], 
    "Message:": "Sensor temperatura y humedad listo. Inicio alarma (sensor de movimiento)", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/julianAvaca44/HomeBerry/commit/596d4bbc5d5fd11adb0d91fbc630682b660ad26d", 
    "Commit Corrections:": "https://github.com/julianAvaca44/HomeBerry/commit/b6036ac30e89415f98f4f9661df59c593d6ffeb2"
  }, 
  {
    "Changes:": [
      "-import Error\n", 
      "+import Response\n"
    ], 
    "Message:": "Corrected import\n\nCorrected import", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/Kitsui/AWS-CMS-LAMBDA/commit/c4b911d5e50eeb9a0670f0b1bc7acf9f86914bcc", 
    "Commit Corrections:": "https://github.com/Kitsui/AWS-CMS-LAMBDA/commit/30b3a8f325c22b0ef66368cbd2ac68627a1f6ee0"
  }, 
  {
    "Changes:": [
      "-        self.assertEqual(test_api.__json__(), expected_value)\n", 
      "+        self.assertEqual(expected_value, test_api.__json__())\n", 
      "-        self.assertEqual(test_api.__json__(), expected_value)\n", 
      "+        self.assertEqual(expected_value, test_api.__json__())\n", 
      "-        self.assertEqual(test_api.__json__(), expected_value)\n", 
      "+        self.assertEqual(expected_value, test_api.__json__())\n", 
      "-        self.assertEqual(test_api.__json__(), expected_value)\n", 
      "+        self.assertEqual(expected_value, test_api.__json__())\n", 
      "-        self.assertEqual(six.text_type(actual_value),\n", 
      "-                         six.text_type(expected_value))\n", 
      "+        self.assertEqual(six.text_type(expected_value),\n", 
      "+                         six.text_type(actual_value))"
    ], 
    "Message:": "Fix order of arguments in assertEqual\n\nSome tests used incorrect order assertEqual(observed, expected).\nThe correct order expected by testtools is\nassertEqual(expected, observed).\nThis patch fix the issue.\n\nChange-Id: Id14676d8d07953fd33139a8fd8b7773aabf5fdfa\nPartial-Bug: #1259292", 
    "Additions:": 6, 
    "Deletions:": 6, 
    "Commit Mistakes:": "https://github.com/openstack/higgins/commit/3e4aad8d082ac70005cd04995a078846105e90d9", 
    "Commit Corrections:": "https://github.com/openstack/higgins/commit/19fa788961c91d1540d91b7ea5abec028d72a594"
  }, 
  {
    "Changes:": [
      "+    return result\n", 
      "-            res = BackChaining_Ask(inKB, g)\n", 
      "+            res = BackChaining_Ask(inKB, q)\n"
    ], 
    "Message:": "Small syntax error fixed", 
    "Additions:": 2, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/tannerzigrang/CSCI-561/commit/c736ee8d69300f647f88a5cfb28bb3fc1aade6e7", 
    "Commit Corrections:": "https://github.com/tannerzigrang/CSCI-561/commit/c70ee9408ab0482c616911094106f5842b64d270"
  }, 
  {
    "Changes:": [
      "-\t\tif add_noies == 0:\n", 
      "+\t\tif add_noise == 0:\n"
    ], 
    "Message:": "Small bug fix", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/bmountjoy/LMTools/commit/90cdfd80fcded72aa1b172a755f78b90297b7d56", 
    "Commit Corrections:": "https://github.com/bmountjoy/LMTools/commit/73267d522b9ceee90c8a9b3ab29356bb333f75b7"
  }, 
  {
    "Changes:": [
      "-    subject = \"Medical Report as of \"+datetime.now().strftime(\"%d/%m/%Y %H:%M:%S\")\n", 
      "+    \tsubject = \"Medical Report as of \"+datetime.now().strftime(\"%d/%m/%Y %H:%M:%S\")\n", 
      "-    \tif os.path.isfile(os.path.join(path,i)) and 'official_log_'+datetime.today().strftime(\"%d-%m-%Y\") in i:\n", 
      "-\t\tfound_file = True\n", 
      "+    \t\tif os.path.isfile(os.path.join(path,i)) and 'official_log_'+datetime.today().strftime(\"%d-%m-%Y\") in i:\n", 
      "+\t\t\tfound_file = True\n", 
      "-\t\tfiles_to_remove.append(path+i)\n", 
      "+\t\t\tfiles_to_remove.append(path+i)\n", 
      "-    \tif os.path.isfile(os.path.join(path,i)) and 'official_log_'+datetime.today().strftime(\"%d-%m-%Y\") in i:\n", 
      "+    \t\tif os.path.isfile(os.path.join(path,i)) and 'official_log_'+datetime.today().strftime(\"%d-%m-%Y\") in i:\n", 
      "-\t\tfiles.append(i)\n", 
      "-\t\tfiles_to_remove.append(path+i)\n", 
      "+\t\t\tfiles.append(i)\n", 
      "+\t\t\tfiles_to_remove.append(path+i)\n", 
      "-    body += \"---\\n\\n\\n\"\n", 
      "+\tbody += \"---\\n\\n\\n\"\n", 
      "-    body += \"Standing from a chair:\\n\"\n", 
      "+\tbody += \"Standing from a chair:\\n\"\n", 
      "-    path = rospack.get_path('ros_visual_wrapper')+'/logs/'\n", 
      "-    for i in os.listdir(path):\n", 
      "-        if os.path.isfile(os.path.join(path,i)) and 'official_log_'+datetime.today().strftime(\"%d-%m-%Y\") in i:\n", 
      "-                found_file = True\n", 
      "-        files.append(i)\n", 
      "-        files_to_remove.append(path+i)\n", 
      "+\tpath = rospack.get_path('ros_visual_wrapper')+'/logs/'\n", 
      "+\tfor i in os.listdir(path):\n", 
      "+\t\tif os.path.isfile(os.path.join(path,i)) and 'official_log_'+datetime.today().strftime(\"%d-%m-%Y\") in i:\n", 
      "+\t\t\tfound_file = True\n", 
      "+\t\t\tfiles.append(i)\n", 
      "+\t\t\tfiles_to_remove.append(path+i)\n", 
      "-        for f in files:\n", 
      "-            with open(path+f, 'r') as myfile:\n", 
      "-                    body += myfile.read()\n", 
      "-\n", 
      "-    body += \"---\\n\\n\\n\"\n", 
      "+        \tfor f in files:\n", 
      "+            \t\twith open(path+f, 'r') as myfile:\n", 
      "+                    \t\tbody += myfile.read()\n", 
      "-    msg.attach(MIMEText(body, 'plain'))\n", 
      "+\tbody += \"---\\n\\n\\n\"\n", 
      "-    body += \"---\\n\\n\\n\"\n", 
      "+\tbody += \"---\\n\\n\\n\"\n", 
      "-    path = rospack.get_path('radio_node_manager')+'/logs/'\n", 
      "-    for i in os.listdir(path):\n", 
      "-        if os.path.isfile(os.path.join(path,i)) and 'official_log_'+datetime.today().strftime(\"%d-%m-%Y\") in i:\n", 
      "-                found_file = True\n", 
      "-        files.append(i)\n", 
      "-        files_to_remove.append(path+i)\n", 
      "+\tbody += \"Gym info:\\n\"\n", 
      "+\n", 
      "+\tpath = rospack.get_path('radio_node_manager')+'/logs/'\n", 
      "+\tfor i in os.listdir(path):\n", 
      "+\t\tif os.path.isfile(os.path.join(path,i)) and 'official_log_'+datetime.today().strftime(\"%d-%m-%Y\") in i:\n", 
      "+\t\t\tfound_file = True\n", 
      "+        \t\tfiles.append(i)\n", 
      "+        \t\tfiles_to_remove.append(path+i)\n", 
      "-        for f in files:\n", 
      "-            with open(path+f, 'r') as myfile:\n", 
      "-                    body += myfile.read()\n", 
      "+        \tfor f in files:\n", 
      "+            \t\twith open(path+f, 'r') as myfile:\n", 
      "+                    \t\tbody += myfile.read()\n", 
      "-    body += \"---\\n\\n\\n\"\n", 
      "+\tbody += \"---\\n\\n\\n\"\n", 
      "-    msg.attach(MIMEText(body, 'plain'))\n", 
      "+\tmsg.attach(MIMEText(body, 'plain'))\n"
    ], 
    "Message:": "Fixed indentation", 
    "Additions:": 33, 
    "Deletions:": 33, 
    "Commit Mistakes:": "https://github.com/RADIO-PROJECT-EU/radio_node_manager/commit/194355857d73ed6c2b17cc5cfa49302d6e30de41", 
    "Commit Corrections:": "https://github.com/RADIO-PROJECT-EU/radio_node_manager/commit/c3cd470efa40c8a5d4ea6c439ad15eb4bcf47e37"
  }, 
  {
    "Changes:": [
      "-import papercut.settings\n", 
      "+import papercut.settings as settings\n"
    ], 
    "Message:": "Fixed name of papercut.settings import.", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/jgrassler/papercut/commit/10ca6f753792d62a1d76cc2566727aa54f5dc717", 
    "Commit Corrections:": "https://github.com/jgrassler/papercut/commit/f2cab7a953c6c8f778bf98ae8a7970641fdfb34e"
  }, 
  {
    "Changes:": [
      "-            raise\n", 
      "+        raise\n"
    ], 
    "Message:": "fix a wrong indentation level", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/ESGF/esg-publisher/commit/575b8e9032e6a89c4d9d27d5d4b5c03f8a09af0a", 
    "Commit Corrections:": "https://github.com/ESGF/esg-publisher/commit/22c52f4ef697707dbf8ced09036c6e6737839afc"
  }, 
  {
    "Changes:": [
      "-from scipy.lianlg         import get_blas_funcs, solve\n", 
      "+from scipy.linalg         import get_blas_funcs, solve\n"
    ], 
    "Message:": "FIxing a typo in an import in gmres.py", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/barbagroup/pygbe/commit/30cb679f36a57a0c53e4b8f1003bff6de6811c6c", 
    "Commit Corrections:": "https://github.com/barbagroup/pygbe/commit/ecd8a7a01e0623b83fc24340898278b4440a39f7"
  }, 
  {
    "Changes:": [
      "-\t\t\tif bankAccountId == bankAccount.id\n", 
      "+\t\t\tif bankAccountId == bankAccount.id :\n"
    ], 
    "Message:": "Fix coding error.", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/pjcaraher/APFlask/commit/44277af56ea55043ff56a343daa2e830a72c1dde", 
    "Commit Corrections:": "https://github.com/pjcaraher/APFlask/commit/ad77a692cdf6a75810bd2c8d1a6bc4c6c1759728"
  }, 
  {
    "Changes:": [
      "-    \t#initialize all network\n", 
      "+    \t#initialize all network loads\n", 
      "-\t\tretPaths = greedyAlgorithm(setP, uncovered_edges, node_loads, edge_loads)\n", 
      "-\t\t#print retPaths\n", 
      "-\t\tprint \"the size of retPaths: \", len(retPaths)\n", 
      "-\t\tprint_result(retPaths, setP, node_loads, edge_loads)\n", 
      "+    \tretPaths = greedyAlgorithm(setP, uncovered_edges, node_loads, edge_loads)\n", 
      "+    \t#print \"edge loads: \" + str(edge_loads)\n", 
      "+    \tprint_result(retPaths, setP, node_loads, edge_loads)\n", 
      "+\t\n"
    ], 
    "Message:": "Fixed more indentation errors", 
    "Additions:": 5, 
    "Deletions:": 5, 
    "Commit Mistakes:": "https://github.com/slin17/Summer_Research_2016/commit/9501b258ff321a1ff89d7082533e609d2f48ffad", 
    "Commit Corrections:": "https://github.com/slin17/Summer_Research_2016/commit/eb64821c7a65541d149f26fd21a2c2637f3e20c4"
  }, 
  {
    "Changes:": [
      "-\ttable_columns = [Column(\"filename_plot\", TEXT),[\"filename_plot\"]\n", 
      "+\ttable_columns = [Column(\"filename_plot\", TEXT)],[\"filename_plot\"]\n"
    ], 
    "Message:": "DashboardSummary.py: fixed typo", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/ArturAkh/HappyFaceModules/commit/5fc9d09fc91938b1aa3f5fb64a68027be6c38540", 
    "Commit Corrections:": "https://github.com/ArturAkh/HappyFaceModules/commit/442ccd7a525c9a9f96be659baa7861674b3e75b1"
  }, 
  {
    "Changes:": [
      "-def printTree(tee, outfile):\n", 
      "+def printTree(tree, outfile):\n"
    ], 
    "Message:": "fix", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/bochf/python/commit/e532224281c44ebab3205d73e6ce0866deea336a", 
    "Commit Corrections:": "https://github.com/bochf/python/commit/5b1563f986104725d0bc4f71a92b243d9f6db95c"
  }, 
  {
    "Changes:": [
      "-            for key,value in kwargs.interitems():\n", 
      "+            for key,value in kwargs.iteritems():\n"
    ], 
    "Message:": "customplot.py: fix typo", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/ArturAkh/HappyFace/commit/bc5af254a046013b28bed698616e550a8c7293b8", 
    "Commit Corrections:": "https://github.com/ArturAkh/HappyFace/commit/2cd960af1353ff803b9f7ff7cea716262ccae80f"
  }, 
  {
    "Changes:": [
      "-                validation = self.validiation_set.input\n", 
      "+                validation = self.validation_set.input\n"
    ], 
    "Message:": "Typo fixed", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/DOOMinikThunder/NNPraktikum/commit/35f7a9780363af7ff1ff5e51eda545b287648f30", 
    "Commit Corrections:": "https://github.com/DOOMinikThunder/NNPraktikum/commit/a9b7d0a51b9680d19850d74a0f2745fbc6b173bc"
  },
  {
    "Changes:": [
      "-def __name__=='__main__':\n", 
      "+if __name__=='__main__':\n"
    ], 
    "Message:": "fixed a bug", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/cdingding/Wecare/commit/a5e53cdc854ab019af47bbc0162e068983375fdc", 
    "Commit Corrections:": "https://github.com/cdingding/Wecare/commit/08964c19fe6fde6fe50944819596506dbf0c6589"
  }, 
  {
    "Changes:": [
      "-    for attempt in range(attempts)\n", 
      "+    for attempt in range(attempts):\n"
    ], 
    "Message:": "Fix typo", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/davidgiesberg/mvsg/commit/424064884328505c09532785cc39c531fad1481b", 
    "Commit Corrections:": "https://github.com/davidgiesberg/mvsg/commit/f336c6686fd8fa6daeebf9ee1f01301af8ed3a17"
  }, 
  {
    "Changes:": [
      "-                                        e.error_text == 'Service not configured'):\n", 
      "+                                e.error_text == 'Service not configured'):\n"
    ], 
    "Message:": "Silly indent oversight.", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/riverbed/steelscript-netprofiler/commit/ab6072cae021af338b88312cc3e231764d30ef38", 
    "Commit Corrections:": "https://github.com/riverbed/steelscript-netprofiler/commit/56fe509ab60dfdd4a2339e81eaabc4d492d17e94"
  }, 
  {
    "Changes:": [
      "-import .forms as forms\n", 
      "+from .forms import * as forms\n"
    ], 
    "Message:": "fix local import", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/sheyabernstein/django-yearlessdate/commit/8d5d7d1e70b1847a4e77e24ef9668f44108cf272", 
    "Commit Corrections:": "https://github.com/sheyabernstein/django-yearlessdate/commit/4527fd3abf631ba9dd6c13e73776d3e61b12e7c5"
  }, 
  {
    "Changes:": [
      "-db[\"options\"][\"group_title\"] = \"{0} GADM {1}\".format(gadm_country,\n", 
      "+dp[\"options\"][\"group_title\"] = \"{0} GADM {1}\".format(gadm_country,\n"
    ], 
    "Message:": "Fix typo.", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/itpir/asdf/commit/53d0637d6622e1e9ec8e8450f4ea1fdb30a27ec1", 
    "Commit Corrections:": "https://github.com/itpir/asdf/commit/9e32cf6db7cfa104e56b28b54484475e38e96e02"
  }, 
  {
    "Changes:": [
      "-        resources += extra_resources\n", 
      "+        resources.objects.extend(extra_resources.objects)\n", 
      "+        resources.ind_dirs.extend(extra_resources.ind_dirs)\n"
    ], 
    "Message:": "Pass along the objects and fix indentation", 
    "Additions:": 2, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/theotherjimmy/mbed/commit/a18e656712a0ee1e0ac8231ffe10268b1755a2e5", 
    "Commit Corrections:": "https://github.com/theotherjimmy/mbed/commit/34a799b410fe2004a6c1e6f91f626da835aa7348"
  }, 
  {
    "Changes:": [
      "-                       clean=False, delete=True, append=False)\n", 
      "+                       clean=False, delete=True, append=False):\n"
    ], 
    "Message:": "BUG: added missing colon", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/astrocatalogs/sne/commit/43f8749149f54feed03eb489debf05ef413a8a6a", 
    "Commit Corrections:": "https://github.com/astrocatalogs/sne/commit/ee2e391484aece66985997ebeae8386b2b1d9477"
  }, 
  {
    "Changes:": [
      "-        if exit:\n", 
      "+        if player_action == 'exit':\n"
    ], 
    "Message:": "fixed the stupid exit issue", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/Spiderstryder/RogueLike-Python-Project/commit/f21ebd16f29b5c9c51ce5224d0610b7f23ec694a", 
    "Commit Corrections:": "https://github.com/Spiderstryder/RogueLike-Python-Project/commit/c259c8da0625c451c2233076de098b330f71ace5"
  }, 
  {
    "Changes:": [
      "-        self.pkg_versi\n", 
      "+        self.pkg_version\n"
    ], 
    "Message:": "fixed typo", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/jaredhanson11/Nova/commit/cd87d0b7f115e1a58758a971afe142f29e9552b6", 
    "Commit Corrections:": "https://github.com/jaredhanson11/Nova/commit/9b95ccb6fcb6e02ec1d61d4a2e0937e460d36d41"
  }, 
  {
    "Changes:": [
      "-        self.pkg_versi\n", 
      "+        self.pkg_version = pkg_version\n"
    ], 
    "Message:": "fixed typo from merge", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/jaredhanson11/Nova/commit/cd87d0b7f115e1a58758a971afe142f29e9552b6", 
    "Commit Corrections:": "https://github.com/jaredhanson11/Nova/commit/a9e15911911e54b9a2cf56c48815848d083b379e"
  }, 
  {
    "Changes:": [
      "-    print 'In gdisconnect access token is %s', access_token\n", 
      "+    print 'In gdisconnect access token is %s' % access_token\n"
    ], 
    "Message:": "BUG: fixed missing % in string substitution", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/moagm316/FSND_Item_Catalog/commit/30e1ae7c2b2010ef2d5968affa9fb7c54555d954", 
    "Commit Corrections:": "https://github.com/moagm316/FSND_Item_Catalog/commit/7fae5001e75a3ba29496122ebbff22f8e7556b4c"
  }, 
  {
    "Changes:": [
      "-            assert credentials[0] = 'Token'\n", 
      "+            assert credentials[0] == 'Token'\n"
    ], 
    "Message:": "Fixed typo.", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/koepked/onramp/commit/efc32a43db4533b779a0679de16ba881458673ce", 
    "Commit Corrections:": "https://github.com/koepked/onramp/commit/2edcfe371cda61681447183e608355c61a5c2ca8"
  }, 
  {
    "Changes:": [
      "-        version='2.0.dev14',\n", 
      "+        version='2.0.dev15',\n", 
      "-                'warcprox=warprox.main:main',\n", 
      "+                'warcprox=warcprox.main:main',\n"
    ], 
    "Message:": "fix typo", 
    "Additions:": 2, 
    "Deletions:": 2, 
    "Commit Mistakes:": "https://github.com/internetarchive/warcprox/commit/320df0565ec92b732c7ea0b254c2e6592cc4ba8c", 
    "Commit Corrections:": "https://github.com/internetarchive/warcprox/commit/04c21408d799335153124de2456c58621e6bcc9d"
  }, 
  {
    "Changes:": [
      "-        e.setAttribute('old-revision', str(p.old_revision))\n", 
      "+      e.setAttribute('old-revision', str(p.old_revision))\n"
    ], 
    "Message:": "pylint: fix indentation in manifest_xml\n\nThis fixes pylint warning:\n\n************* Module manifest_xml\nW:975, 0: Bad indentation. Found 8 spaces, expected 6 (bad-indentation)\n\nChange-Id: I967212f9439430351836ebdc27e442d7b77476e2\nSigned-off-by: Stefan Beller <sbeller@google.com>", 
    "Additions:": 1, 
    "Deletions:": 1, 
    "Commit Mistakes:": "https://github.com/GerritCodeReview/git-repo/commit/d64e8eee518714c0d164a0acae03886a3ff675c9", 
    "Commit Corrections:": "https://github.com/GerritCodeReview/git-repo/commit/6685106306550c6bf2ad68887efc1d075a6f72eb"
  }, 
  {
    "Changes:": [
      "-from collections import namedtuple\n", 
      "+import datetime\n", 
      "-from django.template.loader_tags import (\n", 
      "-    BlockNode, ExtendsNode, BlockContext, BLOCK_CONTEXT_KEY,\n", 
      "-)\n", 
      "+from django.template.loader_tags import BLOCK_CONTEXT_KEY, BlockContext, BlockNode, ExtendsNode\n", 
      "-    local_blocks = dict(\n", 
      "-        (block.name, block)\n", 
      "+    local_blocks = {\n", 
      "+        block.name: block\n", 
      "-    )\n", 
      "+    }\n", 
      "-        raise template.TemplateSyntaxError(\n", 
      "-            'widget name must be \"alias:block_name\" - %s' % widget\n", 
      "-        )\n", 
      "+        raise template.TemplateSyntaxError('widget name must be \"alias:block_name\" - %s' % widget)\n", 
      "-            raise template.TemplateSyntaxError(\n", 
      "-                'No widget library loaded for alias: %r' % alias\n", 
      "-            )\n", 
      "+            raise template.TemplateSyntaxError('No widget library loaded for alias: %r' % alias)\n", 
      "-    raise template.TemplateSyntaxError(\n", 
      "-        'No widget found for: %r' % (names,)\n", 
      "-    )\n", 
      "+    raise template.TemplateSyntaxError('No widget found for: %r' % (names,))\n", 
      "-        raise template.TemplateSyntaxError(\n", 
      "-            '%s requires one positional argument' % tag_name\n", 
      "-        )\n", 
      "+        raise template.TemplateSyntaxError('%s requires one positional argument' % tag_name)\n", 
      "-        raise template.TemplateSyntaxError(\n", 
      "-            '%s accepts only one positional argument' % tag_name\n", 
      "-        )\n", 
      "+        raise template.TemplateSyntaxError('%s accepts only one positional argument' % tag_name)\n", 
      "-        raise template.TemplateSyntaxError(\n", 
      "-            '%s requires one positional argument' % tag_name\n", 
      "-        )\n", 
      "+        raise template.TemplateSyntaxError('%s requires one positional argument' % tag_name)\n", 
      "-        raise template.TemplateSyntaxError(\n", 
      "-            '%s accepts only one positional argument' % tag_name\n", 
      "-        )\n", 
      "+        raise template.TemplateSyntaxError('%s accepts only one positional argument' % tag_name)\n", 
      "-        for attr in ('css_classes', 'errors', 'field', 'form', 'help_text',\n", 
      "-                     'html_name', 'id_for_label', 'label', 'name',):\n", 
      "+        for attr in (\n", 
      "+            'css_classes', 'errors', 'field', 'form', 'help_text', 'html_name', 'id_for_label', 'label', 'name',\n", 
      "+        ):\n", 
      "+    def initial(self):\n", 
      "+        data = self.form_field.form.initial.get(self.form_field.name, self.form_field.field.initial)\n", 
      "+        if callable(data):\n", 
      "+            data = data()\n", 
      "+            # If this is an auto-generated default date, nix the\n", 
      "+            # microseconds for standardized handling. See #22502.\n", 
      "+            if (\n", 
      "+                isinstance(data, (datetime.datetime, datetime.time)) and\n", 
      "+                not self.field.widget.supports_microseconds\n", 
      "+            ):\n", 
      "+                data = data.replace(microsecond=0)\n", 
      "+        return self.form_field.field.prepare_value(data)\n", 
      "+\n", 
      "+    @cached_property\n", 
      "-        if self.raw_alue:\n", 
      "+        if self.raw_value:\n"
    ], 
    "Message:": "Fix typo\nAdd \"initial\" to FieldExtractor\nReformat for 119char line limit\nUse dict comprehension", 
    "Additions:": 30, 
    "Deletions:": 31, 
    "Commit Mistakes:": "https://github.com/funkybob/django-sniplates/commit/e21a0caeaa72a2b367d148fa6ab3f3e551b10886", 
    "Commit Corrections:": "https://github.com/funkybob/django-sniplates/commit/ee5b18b005aaa71214f06448057faaa91e8d37c5"
  }, 
  {
    "Changes:": [
      "-\t    \tif catagory != False:\n", 
      "+\t\t    if catagory != False:\n", 
      "-\t    \telse:\n", 
      "+\t\t    else:\n"
    ], 
    "Message:": "Fixed category selector. Darn indentation.", 
    "Additions:": 2, 
    "Deletions:": 2, 
    "Commit Mistakes:": "https://github.com/mainfram3ca/hackerpyramid/commit/95f5a359317433cb84e0848889c0e42259a77e0d", 
    "Commit Corrections:": "https://github.com/mainfram3ca/hackerpyramid/commit/95c2ee62749fe4e1bc652f6130a41ff7c0d5bbd3"
  }
]
